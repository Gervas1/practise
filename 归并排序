#include<iostream>

using namespace std;
const int N = 1e6 +10;
int q[N], tmp[N];//定义两个数组，第一个是待排序的数组，第二个是用来将两个单调的数组进行汇总的数组，也可以理解为一个辅助数组
void merge_sort(int q[], int l, int r){
	if (l >= r) return ;
	int mid = l + r >> 1;//l+r除以二
	merge_sort(q, l, mid),merge_sort(q, mid + 1, r);//进行左右递归，细分数组
	
	int k = 0, i = l, j = mid + 1;//到这一步，因为已经对数组进行细分，数组传到这里就是两个单调增的数组
	/*对两个单调数组进行汇总在tmp中保存*/
	while(i <= mid && j <= r)
	    if(q[i] <= q[j]) tmp[k ++ ] = q[i ++ ];
	    else tmp[k ++ ] = q[j ++ ];
    /*处理两个数组中有一组数组的剩余数组元素
	while (i <= mid) tmp[k ++ ] = q[ i ++ ];
	while (j <= r) tmp[k ++ ] = q[j ++ ];
	/*把辅助数组tmp中的元素放进目标数组q中*/
	for(i = l,j = 0; i <= r; i ++, j ++) q[i] = tmp[j];
}

int main(){
	int n;
	scanf("%d",&n);
	for(int i = 0; i < n; i ++ ) scanf("%d",&q[i]);
	merge_sort(q, 0, n - 1);
	for(int i = 0; i < n; i ++ ) printf("%d ",q[i]);
	return 0;
}
